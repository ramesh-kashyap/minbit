const ScrollOut = (function () {
  function S(e, t, n) { return e < t ? t : n < e ? n : e; } function T(e) { return +(e > 0) - +(e < 0); } let q; const t = {};
  function n(e) { return `-${e[0].toLowerCase()}`; } function d(e) { return t[e] || (t[e] = e.replace(/([A-Z])/g, n)); } function v(e, t) { return e && e.length !== 0 ? e.nodeName ? [e] : [].slice.call(e[0].nodeName ? e : (t || document.documentElement).querySelectorAll(e)) : []; } function h(e, t) { for (const n in t)n.indexOf('_') && e.setAttribute(`data-${d(n)}`, t[n]); } let z = [];
  function e() { q = 0, z.slice().forEach((e) => e()), F(); } function F() { !q && z.length && (q = requestAnimationFrame(e)); } function N(e, t, n, r) { return typeof e === 'function' ? e(t, n, r) : e; } function m() {} return function (L) {
    let i; let P; let _; let H; const o = (L = L || {}).onChange || m; const l = L.onHidden || m; const c = L.onShown || m; const s = L.onScroll || m; const f = L.cssProps ? (i = L.cssProps, function (e, t) {
      for (const n in t)n.indexOf('_') && (!0 === i || i[n]) && e.style.setProperty(`--${d(n)}`, (r = t[n], Math.round(1e4 * r) / 1e4));
      let r;
    }) : m; const e = L.scrollingElement; const A = e ? v(e)[0] : window; const W = e ? v(e)[0] : document.documentElement; let x = !1; const O = {}; let y = [];
    function t() { y = v(L.targets || '[data-scroll]', v(L.scope || W)[0]).map((e) => ({ element: e })); } function n() {
      const e = W.clientWidth; const t = W.clientHeight; const n = T(-P + (P = W.scrollLeft || window.pageXOffset)); const r = T(-_ + (_ = W.scrollTop || window.pageYOffset)); const i = W.scrollLeft / (W.scrollWidth - e || 1); const o = W.scrollTop / (W.scrollHeight - t || 1);
      x = x || O.scrollDirX !== n || O.scrollDirY !== r || O.scrollPercentX !== i || O.scrollPercentY !== o, O.scrollDirX = n, O.scrollDirY = r, O.scrollPercentX = i, O.scrollPercentY = o;
      for (var l, c = !1, s = 0; s < y.length; s++) {
        for (var f = y[s], u = f.element, a = u, d = 0, v = 0; d += a.offsetLeft, v += a.offsetTop, (a = a.offsetParent) && a !== A;);const h = u.clientHeight || u.offsetHeight || 0; const m = u.clientWidth || u.offsetWidth || 0; const g = (S(d + m, P, P + e) - S(d, P, P + e)) / m; const p = (S(v + h, _, _ + t) - S(v, _, _ + t)) / h; const w = g === 1 ? 0 : T(d - P); const X = p === 1 ? 0 : T(v - _); const Y = S((P - (m / 2 + d - e / 2)) / (e / 2), -1, 1); const b = S((_ - (h / 2 + v - t / 2)) / (t / 2), -1, 1); let D = void 0;
        D = L.offset ? N(L.offset, u, f, W) > _ ? 0 : 1 : (N(L.threshold, u, f, W) || 0) < g * p ? 1 : 0;
        const E = f.visible !== D; (f._changed || E || f.visibleX !== g || f.visibleY !== p || f.index !== s || f.elementHeight !== h || f.elementWidth !== m || f.offsetX !== d || f.offsetY !== v || f.intersectX != f.intersectX || f.intersectY != f.intersectY || f.viewportX !== Y || f.viewportY !== b) && (c = !0, f._changed = !0, f._visibleChanged = E, f.visible = D, f.elementHeight = h, f.elementWidth = m, f.index = s, f.offsetX = d, f.offsetY = v, f.visibleX = g, f.visibleY = p, f.intersectX = w, f.intersectY = X, f.viewportX = Y, f.viewportY = b, f.visible = D);
      }H || !x && !c || (l = C, z.push(l), F(), H = function () { !(z = z.filter((e) => e !== l)).length && q && (cancelAnimationFrame(q), q = 0); });
    } function C() {
      u(), x && (x = !1, h(W, { scrollDirX: O.scrollDirX, scrollDirY: O.scrollDirY }), f(W, O), s(W, O, y));
      for (let e = y.length - 1; e > -1; e--) {
        const t = y[e]; const n = t.element; const r = t.visible; const i = n.hasAttribute('scrollout-once') || !1;
        t._changed && (t._changed = !1, f(n, t)), t._visibleChanged && (h(n, { scroll: r ? 'in' : 'out' }), o(n, t, W), (r ? c : l)(n, t, W)), r && (L.once || i) && y.splice(e, 1);
      }
    } function u() { H && (H(), H = void 0); }t(), n(), C();
    let r = 0; const a = function () { r = r || setTimeout(() => { r = 0, n(); }, 0); };
    return window.addEventListener('resize', a), A.addEventListener('scroll', a), { index: t, update: n, teardown() { u(), window.removeEventListener('resize', a), A.removeEventListener('scroll', a); } };
  };
}());
